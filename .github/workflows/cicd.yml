name: odm-platform CI/CD
on:
  push:
    tags:
      - '*'
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3.5.2
        with:
          ssh-key: ${{secrets.SSH_KEY}}
      - name: Install SSH key # Install SSH key to connect to github repos
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Set env # Extract version from tag and save it as environment variable
        run: echo "TAG_VERSION=$( echo ${{github.ref_name}} | sed 's/[^0-9.]//g' )" >> $GITHUB_ENV
      - name: Update versions
        run: mvn versions:set -DgenerateBackupPoms=false -DnewVersion=${{ env.TAG_VERSION }}
      - name: Push new version
        run: |
          git config user.name "github-workflows-version-updater"
          git config user.email "<>"
          git commit -am "Update pom versions to ${{ env.TAG_VERSION }}"
          git push origin HEAD:main
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml
      - name: Publish to GitHub Packages Apache Maven
        run: mvn -DGitHubPackages=true deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Build Docker image
        run: docker build . --file Dockerfile --tag odm-platform --label "runnumber=${GITHUB_RUN_ID}"
      - name: Login to Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push image to Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION