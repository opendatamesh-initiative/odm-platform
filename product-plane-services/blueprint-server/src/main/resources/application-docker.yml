############################################
# Server configuration
############################################
app:
  workdir:

server:
  port: ${SPRING_PORT}
  error:
    include-message: always


############################################
# Spring, JPA, DB and Flyway configurations
############################################
spring:
  # Profile
  profile: docker
  # JPA
  jpa:
    hibernate:
      ddl-auto: none # validate # validate is the right one, but it doesn't work for mysql
      #show-sql: true
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        globally_quoted_identifiers: true
        default_schema: ODMBLUEPRINT
  # DB
  datasource:
    url: ${DATABASE_URL}?allowPublicKeyRetrieval=true&useSSL=false
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  h2:
    console:
      enabled: ${H2_CONSOLE_ENABLED}
      path: /${H2_CONSOLE_PATH}
      settings:
        web-allow-others: true
  # FlyWay
  # More: https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.data-migration
  flyway:
    #enabled: false # To disable it
    url: ${DATABASE_URL}?allowPublicKeyRetrieval=true&useSSL=false
    user: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    #schemas: ${FLYWAY_SCHEMA} # Not working for mysql
    #"flyway_schema_history" (i.e., default flyway table) on a different SCHEMA
    locations: classpath:db/migration/${FLYWAY_SCRIPTS_DIR}
    clean-on-validation-error: true


############################################
# Git configurations
############################################
git:
  provider: ${GIT_PROVIDER}
  templates:
    path: "templates"
  auth:
    oauth2:
      client:
        provider:
          token-uri: ${OAUTH_TOKEN_URI}
        registration:
          client-id: ${OAUTH_CLIENT_ID}
          client-secret: ${OAUTH_CLIENT_SECRET}
          scope: ${OAUTH_SCOPE}
          authorization-grant-type: client_credentials
    pat: ${PERSONAL_ACCESS_TOKEN}